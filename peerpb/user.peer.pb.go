// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: user.peer.proto

package peerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//UserAfterOnlineReq 用户上线回调请求
type UserAfterOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *UserAfterOnlineReq) Reset() {
	*x = UserAfterOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAfterOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAfterOnlineReq) ProtoMessage() {}

func (x *UserAfterOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAfterOnlineReq.ProtoReflect.Descriptor instead.
func (*UserAfterOnlineReq) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{0}
}

func (x *UserAfterOnlineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

//UserAfterOnlineResp 用户上线回调响应
type UserAfterOnlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *UserAfterOnlineResp) Reset() {
	*x = UserAfterOnlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAfterOnlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAfterOnlineResp) ProtoMessage() {}

func (x *UserAfterOnlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAfterOnlineResp.ProtoReflect.Descriptor instead.
func (*UserAfterOnlineResp) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{1}
}

func (x *UserAfterOnlineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

//UserAfterOfflineReq 用户下线回调请求
type UserAfterOfflineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UserId string         `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id 唯一
}

func (x *UserAfterOfflineReq) Reset() {
	*x = UserAfterOfflineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAfterOfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAfterOfflineReq) ProtoMessage() {}

func (x *UserAfterOfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAfterOfflineReq.ProtoReflect.Descriptor instead.
func (*UserAfterOfflineReq) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{2}
}

func (x *UserAfterOfflineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UserAfterOfflineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//UserAfterOfflineResp 用户下线回调响应
type UserAfterOfflineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *UserAfterOfflineResp) Reset() {
	*x = UserAfterOfflineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAfterOfflineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAfterOfflineResp) ProtoMessage() {}

func (x *UserAfterOfflineResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAfterOfflineResp.ProtoReflect.Descriptor instead.
func (*UserAfterOfflineResp) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{3}
}

func (x *UserAfterOfflineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

//UserBeforeConnectReq 服务端连接前的回调
type UserBeforeConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UserId string         `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id 唯一
	Token  string         `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`   // 用户token
}

func (x *UserBeforeConnectReq) Reset() {
	*x = UserBeforeConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBeforeConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBeforeConnectReq) ProtoMessage() {}

func (x *UserBeforeConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBeforeConnectReq.ProtoReflect.Descriptor instead.
func (*UserBeforeConnectReq) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{4}
}

func (x *UserBeforeConnectReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UserBeforeConnectReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserBeforeConnectReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//UserBeforeConnectResp 服务端连接前的回调
type UserBeforeConnectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// 是否允许建立连接
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	UserId  string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"` // 成功的话返回用户id
}

func (x *UserBeforeConnectResp) Reset() {
	*x = UserBeforeConnectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBeforeConnectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBeforeConnectResp) ProtoMessage() {}

func (x *UserBeforeConnectResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBeforeConnectResp.ProtoReflect.Descriptor instead.
func (*UserBeforeConnectResp) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{5}
}

func (x *UserBeforeConnectResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UserBeforeConnectResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UserBeforeConnectResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//UserBeforeRequestReq 用户请求前的回调请求
type UserBeforeRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Path   string         `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"` // 请求路径
}

func (x *UserBeforeRequestReq) Reset() {
	*x = UserBeforeRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBeforeRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBeforeRequestReq) ProtoMessage() {}

func (x *UserBeforeRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBeforeRequestReq.ProtoReflect.Descriptor instead.
func (*UserBeforeRequestReq) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{6}
}

func (x *UserBeforeRequestReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UserBeforeRequestReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

//UserBeforeRequestResp 用户请求前的回调响应
type UserBeforeRequestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UserId string          `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id
}

func (x *UserBeforeRequestResp) Reset() {
	*x = UserBeforeRequestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_peer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBeforeRequestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBeforeRequestResp) ProtoMessage() {}

func (x *UserBeforeRequestResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_peer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBeforeRequestResp.ProtoReflect.Descriptor instead.
func (*UserBeforeRequestResp) Descriptor() ([]byte, []int) {
	return file_user_peer_proto_rawDescGZIP(), []int{7}
}

func (x *UserBeforeRequestResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UserBeforeRequestResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_user_peer_proto protoreflect.FileDescriptor

var file_user_peer_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x13, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x55, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x5b, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0xb8, 0x02, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_peer_proto_rawDescOnce sync.Once
	file_user_peer_proto_rawDescData = file_user_peer_proto_rawDesc
)

func file_user_peer_proto_rawDescGZIP() []byte {
	file_user_peer_proto_rawDescOnce.Do(func() {
		file_user_peer_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_peer_proto_rawDescData)
	})
	return file_user_peer_proto_rawDescData
}

var file_user_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_user_peer_proto_goTypes = []interface{}{
	(*UserAfterOnlineReq)(nil),    // 0: pb.UserAfterOnlineReq
	(*UserAfterOnlineResp)(nil),   // 1: pb.UserAfterOnlineResp
	(*UserAfterOfflineReq)(nil),   // 2: pb.UserAfterOfflineReq
	(*UserAfterOfflineResp)(nil),  // 3: pb.UserAfterOfflineResp
	(*UserBeforeConnectReq)(nil),  // 4: pb.UserBeforeConnectReq
	(*UserBeforeConnectResp)(nil), // 5: pb.UserBeforeConnectResp
	(*UserBeforeRequestReq)(nil),  // 6: pb.UserBeforeRequestReq
	(*UserBeforeRequestResp)(nil), // 7: pb.UserBeforeRequestResp
	(*RequestHeader)(nil),         // 8: pb.RequestHeader
	(*ResponseHeader)(nil),        // 9: pb.ResponseHeader
}
var file_user_peer_proto_depIdxs = []int32{
	8,  // 0: pb.UserAfterOnlineReq.header:type_name -> pb.RequestHeader
	9,  // 1: pb.UserAfterOnlineResp.header:type_name -> pb.ResponseHeader
	8,  // 2: pb.UserAfterOfflineReq.header:type_name -> pb.RequestHeader
	9,  // 3: pb.UserAfterOfflineResp.header:type_name -> pb.ResponseHeader
	8,  // 4: pb.UserBeforeConnectReq.header:type_name -> pb.RequestHeader
	9,  // 5: pb.UserBeforeConnectResp.header:type_name -> pb.ResponseHeader
	8,  // 6: pb.UserBeforeRequestReq.header:type_name -> pb.RequestHeader
	9,  // 7: pb.UserBeforeRequestResp.header:type_name -> pb.ResponseHeader
	0,  // 8: pb.callbackService.UserAfterOnline:input_type -> pb.UserAfterOnlineReq
	2,  // 9: pb.callbackService.UserAfterOffline:input_type -> pb.UserAfterOfflineReq
	4,  // 10: pb.callbackService.UserBeforeConnect:input_type -> pb.UserBeforeConnectReq
	6,  // 11: pb.callbackService.UserBeforeRequest:input_type -> pb.UserBeforeRequestReq
	1,  // 12: pb.callbackService.UserAfterOnline:output_type -> pb.UserAfterOnlineResp
	3,  // 13: pb.callbackService.UserAfterOffline:output_type -> pb.UserAfterOfflineResp
	5,  // 14: pb.callbackService.UserBeforeConnect:output_type -> pb.UserBeforeConnectResp
	7,  // 15: pb.callbackService.UserBeforeRequest:output_type -> pb.UserBeforeRequestResp
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_user_peer_proto_init() }
func file_user_peer_proto_init() {
	if File_user_peer_proto != nil {
		return
	}
	file_types_peer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_peer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAfterOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_peer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAfterOnlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_peer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAfterOfflineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_peer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAfterOfflineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_peer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBeforeConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_peer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBeforeConnectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_peer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBeforeRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_peer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBeforeRequestResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_peer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_peer_proto_goTypes,
		DependencyIndexes: file_user_peer_proto_depIdxs,
		MessageInfos:      file_user_peer_proto_msgTypes,
	}.Build()
	File_user_peer_proto = out.File
	file_user_peer_proto_rawDesc = nil
	file_user_peer_proto_goTypes = nil
	file_user_peer_proto_depIdxs = nil
}
