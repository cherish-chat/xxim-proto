// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: conversation.peer.proto

package peerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **************************************************** 定义枚举 ***************************************************** //
//ConversationSettingKey 会话设置key
type ConversationSettingKey int32

const (
	// 是否置顶
	ConversationSettingKey_IsPinned ConversationSettingKey = 0
	// 是否免打扰
	ConversationSettingKey_IsMuted ConversationSettingKey = 1
	// 是否屏蔽
	ConversationSettingKey_IsBlocked ConversationSettingKey = 2
	// 是否折叠
	ConversationSettingKey_IsFolded ConversationSettingKey = 3
	// 自己设置的会话备注
	ConversationSettingKey_ConversationAlias ConversationSettingKey = 4
	// 在会话中的昵称
	ConversationSettingKey_NicknameInConversation ConversationSettingKey = 5
)

// Enum value maps for ConversationSettingKey.
var (
	ConversationSettingKey_name = map[int32]string{
		0: "IsPinned",
		1: "IsMuted",
		2: "IsBlocked",
		3: "IsFolded",
		4: "ConversationAlias",
		5: "NicknameInConversation",
	}
	ConversationSettingKey_value = map[string]int32{
		"IsPinned":               0,
		"IsMuted":                1,
		"IsBlocked":              2,
		"IsFolded":               3,
		"ConversationAlias":      4,
		"NicknameInConversation": 5,
	}
)

func (x ConversationSettingKey) Enum() *ConversationSettingKey {
	p := new(ConversationSettingKey)
	*p = x
	return p
}

func (x ConversationSettingKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationSettingKey) Descriptor() protoreflect.EnumDescriptor {
	return file_conversation_peer_proto_enumTypes[0].Descriptor()
}

func (ConversationSettingKey) Type() protoreflect.EnumType {
	return &file_conversation_peer_proto_enumTypes[0]
}

func (x ConversationSettingKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationSettingKey.Descriptor instead.
func (ConversationSettingKey) EnumDescriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{0}
}

//FriendApplyStatus 好友申请状态
type FriendApplyStatus int32

const (
	//FriendApplying 申请中
	FriendApplyStatus_FriendApplying FriendApplyStatus = 0
	//FriendAccepted 已同意
	FriendApplyStatus_FriendAccepted FriendApplyStatus = 1
	//FriendRejected 已拒绝
	FriendApplyStatus_FriendRejected FriendApplyStatus = 2
)

// Enum value maps for FriendApplyStatus.
var (
	FriendApplyStatus_name = map[int32]string{
		0: "FriendApplying",
		1: "FriendAccepted",
		2: "FriendRejected",
	}
	FriendApplyStatus_value = map[string]int32{
		"FriendApplying": 0,
		"FriendAccepted": 1,
		"FriendRejected": 2,
	}
)

func (x FriendApplyStatus) Enum() *FriendApplyStatus {
	p := new(FriendApplyStatus)
	*p = x
	return p
}

func (x FriendApplyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendApplyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_conversation_peer_proto_enumTypes[1].Descriptor()
}

func (FriendApplyStatus) Type() protoreflect.EnumType {
	return &file_conversation_peer_proto_enumTypes[1]
}

func (x FriendApplyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendApplyStatus.Descriptor instead.
func (FriendApplyStatus) EnumDescriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{1}
}

type ListJoinedConversationsReq_Filter_SettingKV_Operator int32

const (
	// 等于
	ListJoinedConversationsReq_Filter_SettingKV_Equal ListJoinedConversationsReq_Filter_SettingKV_Operator = 0
	// 不等于
	ListJoinedConversationsReq_Filter_SettingKV_NotEqual ListJoinedConversationsReq_Filter_SettingKV_Operator = 1
)

// Enum value maps for ListJoinedConversationsReq_Filter_SettingKV_Operator.
var (
	ListJoinedConversationsReq_Filter_SettingKV_Operator_name = map[int32]string{
		0: "Equal",
		1: "NotEqual",
	}
	ListJoinedConversationsReq_Filter_SettingKV_Operator_value = map[string]int32{
		"Equal":    0,
		"NotEqual": 1,
	}
)

func (x ListJoinedConversationsReq_Filter_SettingKV_Operator) Enum() *ListJoinedConversationsReq_Filter_SettingKV_Operator {
	p := new(ListJoinedConversationsReq_Filter_SettingKV_Operator)
	*p = x
	return p
}

func (x ListJoinedConversationsReq_Filter_SettingKV_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListJoinedConversationsReq_Filter_SettingKV_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_conversation_peer_proto_enumTypes[2].Descriptor()
}

func (ListJoinedConversationsReq_Filter_SettingKV_Operator) Type() protoreflect.EnumType {
	return &file_conversation_peer_proto_enumTypes[2]
}

func (x ListJoinedConversationsReq_Filter_SettingKV_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListJoinedConversationsReq_Filter_SettingKV_Operator.Descriptor instead.
func (ListJoinedConversationsReq_Filter_SettingKV_Operator) EnumDescriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{44, 0, 0, 0}
}

// **************************************************** 外部 ***************************************************** //
// ************************************************** 外部: 群 *************************************************** //
type GroupAfterKeepAliveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *GroupAfterKeepAliveReq) Reset() {
	*x = GroupAfterKeepAliveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAfterKeepAliveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAfterKeepAliveReq) ProtoMessage() {}

func (x *GroupAfterKeepAliveReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAfterKeepAliveReq.ProtoReflect.Descriptor instead.
func (*GroupAfterKeepAliveReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{0}
}

func (x *GroupAfterKeepAliveReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type GroupAfterKeepAliveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *GroupAfterKeepAliveResp) Reset() {
	*x = GroupAfterKeepAliveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAfterKeepAliveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAfterKeepAliveResp) ProtoMessage() {}

func (x *GroupAfterKeepAliveResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAfterKeepAliveResp.ProtoReflect.Descriptor instead.
func (*GroupAfterKeepAliveResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{1}
}

func (x *GroupAfterKeepAliveResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type GroupAfterOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *GroupAfterOnlineReq) Reset() {
	*x = GroupAfterOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAfterOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAfterOnlineReq) ProtoMessage() {}

func (x *GroupAfterOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAfterOnlineReq.ProtoReflect.Descriptor instead.
func (*GroupAfterOnlineReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{2}
}

func (x *GroupAfterOnlineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type GroupAfterOnlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *GroupAfterOnlineResp) Reset() {
	*x = GroupAfterOnlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAfterOnlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAfterOnlineResp) ProtoMessage() {}

func (x *GroupAfterOnlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAfterOnlineResp.ProtoReflect.Descriptor instead.
func (*GroupAfterOnlineResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{3}
}

func (x *GroupAfterOnlineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type GroupAfterOfflineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UserId string         `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GroupAfterOfflineReq) Reset() {
	*x = GroupAfterOfflineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAfterOfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAfterOfflineReq) ProtoMessage() {}

func (x *GroupAfterOfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAfterOfflineReq.ProtoReflect.Descriptor instead.
func (*GroupAfterOfflineReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{4}
}

func (x *GroupAfterOfflineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GroupAfterOfflineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GroupAfterOfflineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *GroupAfterOfflineResp) Reset() {
	*x = GroupAfterOfflineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupAfterOfflineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAfterOfflineResp) ProtoMessage() {}

func (x *GroupAfterOfflineResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAfterOfflineResp.ProtoReflect.Descriptor instead.
func (*GroupAfterOfflineResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{5}
}

func (x *GroupAfterOfflineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type GroupCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header     *RequestHeader    `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Name       *string           `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Avatar     *string           `protobuf:"bytes,3,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	MemberList []string          `protobuf:"bytes,4,rep,name=memberList,proto3" json:"memberList,omitempty"`
	InfoMap    map[string]string `protobuf:"bytes,5,rep,name=infoMap,proto3" json:"infoMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraMap   map[string]string `protobuf:"bytes,6,rep,name=extraMap,proto3" json:"extraMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GroupCreateReq) Reset() {
	*x = GroupCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreateReq) ProtoMessage() {}

func (x *GroupCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreateReq.ProtoReflect.Descriptor instead.
func (*GroupCreateReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{6}
}

func (x *GroupCreateReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GroupCreateReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GroupCreateReq) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *GroupCreateReq) GetMemberList() []string {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *GroupCreateReq) GetInfoMap() map[string]string {
	if x != nil {
		return x.InfoMap
	}
	return nil
}

func (x *GroupCreateReq) GetExtraMap() map[string]string {
	if x != nil {
		return x.ExtraMap
	}
	return nil
}

type GroupCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	GroupId string          `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *GroupCreateResp) Reset() {
	*x = GroupCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreateResp) ProtoMessage() {}

func (x *GroupCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreateResp.ProtoReflect.Descriptor instead.
func (*GroupCreateResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{7}
}

func (x *GroupCreateResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GroupCreateResp) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

//CountJoinGroupReq 统计加入的群组数量
type CountJoinGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CountJoinGroupReq) Reset() {
	*x = CountJoinGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountJoinGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountJoinGroupReq) ProtoMessage() {}

func (x *CountJoinGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountJoinGroupReq.ProtoReflect.Descriptor instead.
func (*CountJoinGroupReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{8}
}

func (x *CountJoinGroupReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CountJoinGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Count  uint32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountJoinGroupResp) Reset() {
	*x = CountJoinGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountJoinGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountJoinGroupResp) ProtoMessage() {}

func (x *CountJoinGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountJoinGroupResp.ProtoReflect.Descriptor instead.
func (*CountJoinGroupResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{9}
}

func (x *CountJoinGroupResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CountJoinGroupResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

//CountCreateGroupReq 统计创建的群组数量
type CountCreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CountCreateGroupReq) Reset() {
	*x = CountCreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCreateGroupReq) ProtoMessage() {}

func (x *CountCreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCreateGroupReq.ProtoReflect.Descriptor instead.
func (*CountCreateGroupReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{10}
}

func (x *CountCreateGroupReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CountCreateGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Count  uint32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountCreateGroupResp) Reset() {
	*x = CountCreateGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCreateGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCreateGroupResp) ProtoMessage() {}

func (x *CountCreateGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCreateGroupResp.ProtoReflect.Descriptor instead.
func (*CountCreateGroupResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{11}
}

func (x *CountCreateGroupResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CountCreateGroupResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

//ListGroupSubscribersReq 列出群组订阅者
type ListGroupSubscribersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//GroupId 群组id
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	//Cursor 游标
	Cursor uint32 `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	//Limit 限制
	Limit  uint32                          `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Filter *ListGroupSubscribersReq_Filter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Option *ListGroupSubscribersReq_Option `protobuf:"bytes,6,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ListGroupSubscribersReq) Reset() {
	*x = ListGroupSubscribersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupSubscribersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupSubscribersReq) ProtoMessage() {}

func (x *ListGroupSubscribersReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupSubscribersReq.ProtoReflect.Descriptor instead.
func (*ListGroupSubscribersReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{12}
}

func (x *ListGroupSubscribersReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListGroupSubscribersReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ListGroupSubscribersReq) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListGroupSubscribersReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListGroupSubscribersReq) GetFilter() *ListGroupSubscribersReq_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListGroupSubscribersReq) GetOption() *ListGroupSubscribersReq_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type ListGroupSubscribersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         *ResponseHeader                        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	SubscriberList []*ListGroupSubscribersResp_Subscriber `protobuf:"bytes,2,rep,name=subscriberList,proto3" json:"subscriberList,omitempty"`
}

func (x *ListGroupSubscribersResp) Reset() {
	*x = ListGroupSubscribersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupSubscribersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupSubscribersResp) ProtoMessage() {}

func (x *ListGroupSubscribersResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupSubscribersResp.ProtoReflect.Descriptor instead.
func (*ListGroupSubscribersResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{13}
}

func (x *ListGroupSubscribersResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListGroupSubscribersResp) GetSubscriberList() []*ListGroupSubscribersResp_Subscriber {
	if x != nil {
		return x.SubscriberList
	}
	return nil
}

type ListMyJoinedGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//Cursor 游标
	Cursor uint32 `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	//Limit 限制
	Limit  uint32                       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Filter *ListMyJoinedGroupReq_Filter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Option *ListMyJoinedGroupReq_Option `protobuf:"bytes,5,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ListMyJoinedGroupReq) Reset() {
	*x = ListMyJoinedGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyJoinedGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyJoinedGroupReq) ProtoMessage() {}

func (x *ListMyJoinedGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyJoinedGroupReq.ProtoReflect.Descriptor instead.
func (*ListMyJoinedGroupReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{14}
}

func (x *ListMyJoinedGroupReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListMyJoinedGroupReq) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListMyJoinedGroupReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListMyJoinedGroupReq) GetFilter() *ListMyJoinedGroupReq_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListMyJoinedGroupReq) GetOption() *ListMyJoinedGroupReq_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type ListMyJoinedGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *ResponseHeader                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	GroupList []*ListMyJoinedGroupResp_Group `protobuf:"bytes,2,rep,name=groupList,proto3" json:"groupList,omitempty"`
}

func (x *ListMyJoinedGroupResp) Reset() {
	*x = ListMyJoinedGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyJoinedGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyJoinedGroupResp) ProtoMessage() {}

func (x *ListMyJoinedGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyJoinedGroupResp.ProtoReflect.Descriptor instead.
func (*ListMyJoinedGroupResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{15}
}

func (x *ListMyJoinedGroupResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListMyJoinedGroupResp) GetGroupList() []*ListMyJoinedGroupResp_Group {
	if x != nil {
		return x.GroupList
	}
	return nil
}

// ************************************************** 外部: 好友 *************************************************** //
type FriendAfterKeepAliveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *FriendAfterKeepAliveReq) Reset() {
	*x = FriendAfterKeepAliveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAfterKeepAliveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAfterKeepAliveReq) ProtoMessage() {}

func (x *FriendAfterKeepAliveReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAfterKeepAliveReq.ProtoReflect.Descriptor instead.
func (*FriendAfterKeepAliveReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{16}
}

func (x *FriendAfterKeepAliveReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type FriendAfterKeepAliveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *FriendAfterKeepAliveResp) Reset() {
	*x = FriendAfterKeepAliveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAfterKeepAliveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAfterKeepAliveResp) ProtoMessage() {}

func (x *FriendAfterKeepAliveResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAfterKeepAliveResp.ProtoReflect.Descriptor instead.
func (*FriendAfterKeepAliveResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{17}
}

func (x *FriendAfterKeepAliveResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type FriendAfterOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *FriendAfterOnlineReq) Reset() {
	*x = FriendAfterOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAfterOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAfterOnlineReq) ProtoMessage() {}

func (x *FriendAfterOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAfterOnlineReq.ProtoReflect.Descriptor instead.
func (*FriendAfterOnlineReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{18}
}

func (x *FriendAfterOnlineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type FriendAfterOnlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *FriendAfterOnlineResp) Reset() {
	*x = FriendAfterOnlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAfterOnlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAfterOnlineResp) ProtoMessage() {}

func (x *FriendAfterOnlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAfterOnlineResp.ProtoReflect.Descriptor instead.
func (*FriendAfterOnlineResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{19}
}

func (x *FriendAfterOnlineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type FriendAfterOfflineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UserId string         `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *FriendAfterOfflineReq) Reset() {
	*x = FriendAfterOfflineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAfterOfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAfterOfflineReq) ProtoMessage() {}

func (x *FriendAfterOfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAfterOfflineReq.ProtoReflect.Descriptor instead.
func (*FriendAfterOfflineReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{20}
}

func (x *FriendAfterOfflineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FriendAfterOfflineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FriendAfterOfflineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *FriendAfterOfflineResp) Reset() {
	*x = FriendAfterOfflineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAfterOfflineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAfterOfflineResp) ProtoMessage() {}

func (x *FriendAfterOfflineResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAfterOfflineResp.ProtoReflect.Descriptor instead.
func (*FriendAfterOfflineResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{21}
}

func (x *FriendAfterOfflineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type FriendApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header   *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ToUserId string         `protobuf:"bytes,2,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
	//Message 附加消息
	Message *string `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
	//Answer 附加回答
	Answer *string `protobuf:"bytes,4,opt,name=answer,proto3,oneof" json:"answer,omitempty"`
}

func (x *FriendApplyReq) Reset() {
	*x = FriendApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplyReq) ProtoMessage() {}

func (x *FriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplyReq.ProtoReflect.Descriptor instead.
func (*FriendApplyReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{22}
}

func (x *FriendApplyReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FriendApplyReq) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *FriendApplyReq) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *FriendApplyReq) GetAnswer() string {
	if x != nil && x.Answer != nil {
		return *x.Answer
	}
	return ""
}

type FriendApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *FriendApplyResp) Reset() {
	*x = FriendApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplyResp) ProtoMessage() {}

func (x *FriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplyResp.ProtoReflect.Descriptor instead.
func (*FriendApplyResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{23}
}

func (x *FriendApplyResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type FriendApplyHandleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ApplyId string         `protobuf:"bytes,2,opt,name=applyId,proto3" json:"applyId,omitempty"`
	//Agree 是否同意
	Agree bool `protobuf:"varint,3,opt,name=agree,proto3" json:"agree,omitempty"`
	//同意后发送的第一条消息
	FirstMessage *string `protobuf:"bytes,4,opt,name=firstMessage,proto3,oneof" json:"firstMessage,omitempty"`
}

func (x *FriendApplyHandleReq) Reset() {
	*x = FriendApplyHandleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplyHandleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplyHandleReq) ProtoMessage() {}

func (x *FriendApplyHandleReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplyHandleReq.ProtoReflect.Descriptor instead.
func (*FriendApplyHandleReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{24}
}

func (x *FriendApplyHandleReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FriendApplyHandleReq) GetApplyId() string {
	if x != nil {
		return x.ApplyId
	}
	return ""
}

func (x *FriendApplyHandleReq) GetAgree() bool {
	if x != nil {
		return x.Agree
	}
	return false
}

func (x *FriendApplyHandleReq) GetFirstMessage() string {
	if x != nil && x.FirstMessage != nil {
		return *x.FirstMessage
	}
	return ""
}

type FriendApplyHandleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *FriendApplyHandleResp) Reset() {
	*x = FriendApplyHandleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplyHandleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplyHandleResp) ProtoMessage() {}

func (x *FriendApplyHandleResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplyHandleResp.ProtoReflect.Descriptor instead.
func (*FriendApplyHandleResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{25}
}

func (x *FriendApplyHandleResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ListFriendApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//Cursor 游标
	Cursor uint32 `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	//Limit 限制
	Limit  uint32                     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Filter *ListFriendApplyReq_Filter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Option *ListFriendApplyReq_Option `protobuf:"bytes,5,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ListFriendApplyReq) Reset() {
	*x = ListFriendApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendApplyReq) ProtoMessage() {}

func (x *ListFriendApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendApplyReq.ProtoReflect.Descriptor instead.
func (*ListFriendApplyReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{26}
}

func (x *ListFriendApplyReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListFriendApplyReq) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListFriendApplyReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListFriendApplyReq) GetFilter() *ListFriendApplyReq_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListFriendApplyReq) GetOption() *ListFriendApplyReq_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type ListFriendApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//Cursor 游标
	Cursor          uint32                             `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	FriendApplyList []*ListFriendApplyResp_FriendApply `protobuf:"bytes,3,rep,name=friendApplyList,proto3" json:"friendApplyList,omitempty"`
}

func (x *ListFriendApplyResp) Reset() {
	*x = ListFriendApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendApplyResp) ProtoMessage() {}

func (x *ListFriendApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendApplyResp.ProtoReflect.Descriptor instead.
func (*ListFriendApplyResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{27}
}

func (x *ListFriendApplyResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListFriendApplyResp) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListFriendApplyResp) GetFriendApplyList() []*ListFriendApplyResp_FriendApply {
	if x != nil {
		return x.FriendApplyList
	}
	return nil
}

//CountFriendReq 统计好友数量
type CountFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CountFriendReq) Reset() {
	*x = CountFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountFriendReq) ProtoMessage() {}

func (x *CountFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountFriendReq.ProtoReflect.Descriptor instead.
func (*CountFriendReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{28}
}

func (x *CountFriendReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CountFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Count  uint32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountFriendResp) Reset() {
	*x = CountFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountFriendResp) ProtoMessage() {}

func (x *CountFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountFriendResp.ProtoReflect.Descriptor instead.
func (*CountFriendResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{29}
}

func (x *CountFriendResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CountFriendResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// ************************************************** 外部: 频道 *************************************************** //
type ChannelAfterKeepAliveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ChannelAfterKeepAliveReq) Reset() {
	*x = ChannelAfterKeepAliveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelAfterKeepAliveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelAfterKeepAliveReq) ProtoMessage() {}

func (x *ChannelAfterKeepAliveReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelAfterKeepAliveReq.ProtoReflect.Descriptor instead.
func (*ChannelAfterKeepAliveReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{30}
}

func (x *ChannelAfterKeepAliveReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ChannelAfterKeepAliveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ChannelAfterKeepAliveResp) Reset() {
	*x = ChannelAfterKeepAliveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelAfterKeepAliveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelAfterKeepAliveResp) ProtoMessage() {}

func (x *ChannelAfterKeepAliveResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelAfterKeepAliveResp.ProtoReflect.Descriptor instead.
func (*ChannelAfterKeepAliveResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{31}
}

func (x *ChannelAfterKeepAliveResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ChannelAfterOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ChannelAfterOnlineReq) Reset() {
	*x = ChannelAfterOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelAfterOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelAfterOnlineReq) ProtoMessage() {}

func (x *ChannelAfterOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelAfterOnlineReq.ProtoReflect.Descriptor instead.
func (*ChannelAfterOnlineReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{32}
}

func (x *ChannelAfterOnlineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ChannelAfterOnlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ChannelAfterOnlineResp) Reset() {
	*x = ChannelAfterOnlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelAfterOnlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelAfterOnlineResp) ProtoMessage() {}

func (x *ChannelAfterOnlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelAfterOnlineResp.ProtoReflect.Descriptor instead.
func (*ChannelAfterOnlineResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{33}
}

func (x *ChannelAfterOnlineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ChannelAfterOfflineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UserId string         `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ChannelAfterOfflineReq) Reset() {
	*x = ChannelAfterOfflineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelAfterOfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelAfterOfflineReq) ProtoMessage() {}

func (x *ChannelAfterOfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelAfterOfflineReq.ProtoReflect.Descriptor instead.
func (*ChannelAfterOfflineReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{34}
}

func (x *ChannelAfterOfflineReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ChannelAfterOfflineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ChannelAfterOfflineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ChannelAfterOfflineResp) Reset() {
	*x = ChannelAfterOfflineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelAfterOfflineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelAfterOfflineResp) ProtoMessage() {}

func (x *ChannelAfterOfflineResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelAfterOfflineResp.ProtoReflect.Descriptor instead.
func (*ChannelAfterOfflineResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{35}
}

func (x *ChannelAfterOfflineResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type UpsertChannelMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//SubscriptionId 订阅号id
	ChannelId   string       `protobuf:"bytes,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	UserChannel *UserChannel `protobuf:"bytes,3,opt,name=userChannel,proto3" json:"userChannel,omitempty"`
}

func (x *UpsertChannelMemberReq) Reset() {
	*x = UpsertChannelMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertChannelMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertChannelMemberReq) ProtoMessage() {}

func (x *UpsertChannelMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertChannelMemberReq.ProtoReflect.Descriptor instead.
func (*UpsertChannelMemberReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{36}
}

func (x *UpsertChannelMemberReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpsertChannelMemberReq) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpsertChannelMemberReq) GetUserChannel() *UserChannel {
	if x != nil {
		return x.UserChannel
	}
	return nil
}

type UpsertChannelMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *UpsertChannelMemberResp) Reset() {
	*x = UpsertChannelMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertChannelMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertChannelMemberResp) ProtoMessage() {}

func (x *UpsertChannelMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertChannelMemberResp.ProtoReflect.Descriptor instead.
func (*UpsertChannelMemberResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{37}
}

func (x *UpsertChannelMemberResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type DeleteChannelMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//channelId 频道id
	ChannelId string `protobuf:"bytes,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *DeleteChannelMemberReq) Reset() {
	*x = DeleteChannelMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelMemberReq) ProtoMessage() {}

func (x *DeleteChannelMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelMemberReq.ProtoReflect.Descriptor instead.
func (*DeleteChannelMemberReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteChannelMemberReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteChannelMemberReq) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type DeleteChannelMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *DeleteChannelMemberResp) Reset() {
	*x = DeleteChannelMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelMemberResp) ProtoMessage() {}

func (x *DeleteChannelMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelMemberResp.ProtoReflect.Descriptor instead.
func (*DeleteChannelMemberResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteChannelMemberResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ListChannelSubscribersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//channelId 频道id
	ChannelId string `protobuf:"bytes,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	//Cursor 游标
	Cursor uint32 `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	//Limit 限制
	Limit  uint32                            `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Filter *ListChannelSubscribersReq_Filter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Option *ListChannelSubscribersReq_Option `protobuf:"bytes,6,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ListChannelSubscribersReq) Reset() {
	*x = ListChannelSubscribersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannelSubscribersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelSubscribersReq) ProtoMessage() {}

func (x *ListChannelSubscribersReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelSubscribersReq.ProtoReflect.Descriptor instead.
func (*ListChannelSubscribersReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{40}
}

func (x *ListChannelSubscribersReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListChannelSubscribersReq) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ListChannelSubscribersReq) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListChannelSubscribersReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListChannelSubscribersReq) GetFilter() *ListChannelSubscribersReq_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListChannelSubscribersReq) GetOption() *ListChannelSubscribersReq_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type ListChannelSubscribersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         *ResponseHeader                          `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	SubscriberList []*ListChannelSubscribersResp_Subscriber `protobuf:"bytes,2,rep,name=subscriberList,proto3" json:"subscriberList,omitempty"`
}

func (x *ListChannelSubscribersResp) Reset() {
	*x = ListChannelSubscribersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannelSubscribersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelSubscribersResp) ProtoMessage() {}

func (x *ListChannelSubscribersResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelSubscribersResp.ProtoReflect.Descriptor instead.
func (*ListChannelSubscribersResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{41}
}

func (x *ListChannelSubscribersResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListChannelSubscribersResp) GetSubscriberList() []*ListChannelSubscribersResp_Subscriber {
	if x != nil {
		return x.SubscriberList
	}
	return nil
}

type ListMyChannelsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//Cursor 游标
	Cursor uint32 `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	//Limit 限制
	Limit  uint32                    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Filter *ListMyChannelsReq_Filter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Option *ListMyChannelsReq_Option `protobuf:"bytes,5,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ListMyChannelsReq) Reset() {
	*x = ListMyChannelsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyChannelsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyChannelsReq) ProtoMessage() {}

func (x *ListMyChannelsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyChannelsReq.ProtoReflect.Descriptor instead.
func (*ListMyChannelsReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{42}
}

func (x *ListMyChannelsReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListMyChannelsReq) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListMyChannelsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListMyChannelsReq) GetFilter() *ListMyChannelsReq_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListMyChannelsReq) GetOption() *ListMyChannelsReq_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type ListMyChannelsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	//Cursor 游标
	Cursor        uint32                          `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	MyChannelList []*ListMyChannelsResp_MyChannel `protobuf:"bytes,3,rep,name=myChannelList,proto3" json:"myChannelList,omitempty"`
}

func (x *ListMyChannelsResp) Reset() {
	*x = ListMyChannelsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyChannelsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyChannelsResp) ProtoMessage() {}

func (x *ListMyChannelsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyChannelsResp.ProtoReflect.Descriptor instead.
func (*ListMyChannelsResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{43}
}

func (x *ListMyChannelsResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListMyChannelsResp) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListMyChannelsResp) GetMyChannelList() []*ListMyChannelsResp_MyChannel {
	if x != nil {
		return x.MyChannelList
	}
	return nil
}

//ListJoinedConversations 列出加入的会话
type ListJoinedConversationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header           *RequestHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ConversationType ConversationType `protobuf:"varint,2,opt,name=conversationType,proto3,enum=pb.ConversationType" json:"conversationType,omitempty"`
	//Cursor 游标
	Cursor uint32 `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	//Limit 限制
	Limit  uint32                             `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Filter *ListJoinedConversationsReq_Filter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Option *ListJoinedConversationsReq_Option `protobuf:"bytes,6,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ListJoinedConversationsReq) Reset() {
	*x = ListJoinedConversationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJoinedConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJoinedConversationsReq) ProtoMessage() {}

func (x *ListJoinedConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJoinedConversationsReq.ProtoReflect.Descriptor instead.
func (*ListJoinedConversationsReq) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{44}
}

func (x *ListJoinedConversationsReq) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListJoinedConversationsReq) GetConversationType() ConversationType {
	if x != nil {
		return x.ConversationType
	}
	return ConversationType_Single
}

func (x *ListJoinedConversationsReq) GetCursor() uint32 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListJoinedConversationsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListJoinedConversationsReq) GetFilter() *ListJoinedConversationsReq_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListJoinedConversationsReq) GetOption() *ListJoinedConversationsReq_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type ListJoinedConversationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header           *ResponseHeader                             `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ConversationList []*ListJoinedConversationsResp_Conversation `protobuf:"bytes,3,rep,name=conversationList,proto3" json:"conversationList,omitempty"`
}

func (x *ListJoinedConversationsResp) Reset() {
	*x = ListJoinedConversationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJoinedConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJoinedConversationsResp) ProtoMessage() {}

func (x *ListJoinedConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJoinedConversationsResp.ProtoReflect.Descriptor instead.
func (*ListJoinedConversationsResp) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{45}
}

func (x *ListJoinedConversationsResp) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListJoinedConversationsResp) GetConversationList() []*ListJoinedConversationsResp_Conversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

//Filter 过滤器
type ListGroupSubscribersReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//subscribeTimeGte 订阅时间大于等于
	SubscribeTimeGte uint32 `protobuf:"varint,1,opt,name=subscribeTimeGte,proto3" json:"subscribeTimeGte,omitempty"`
}

func (x *ListGroupSubscribersReq_Filter) Reset() {
	*x = ListGroupSubscribersReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupSubscribersReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupSubscribersReq_Filter) ProtoMessage() {}

func (x *ListGroupSubscribersReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupSubscribersReq_Filter.ProtoReflect.Descriptor instead.
func (*ListGroupSubscribersReq_Filter) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListGroupSubscribersReq_Filter) GetSubscribeTimeGte() uint32 {
	if x != nil {
		return x.SubscribeTimeGte
	}
	return 0
}

//Option 选项
type ListGroupSubscribersReq_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGroupSubscribersReq_Option) Reset() {
	*x = ListGroupSubscribersReq_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupSubscribersReq_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupSubscribersReq_Option) ProtoMessage() {}

func (x *ListGroupSubscribersReq_Option) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupSubscribersReq_Option.ProtoReflect.Descriptor instead.
func (*ListGroupSubscribersReq_Option) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{12, 1}
}

//Cursor 游标
//List 列表
type ListGroupSubscribersResp_Subscriber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//UserId 用户id
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//SubscribeTime 订阅时间
	SubscribeTime uint32 `protobuf:"varint,2,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
}

func (x *ListGroupSubscribersResp_Subscriber) Reset() {
	*x = ListGroupSubscribersResp_Subscriber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupSubscribersResp_Subscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupSubscribersResp_Subscriber) ProtoMessage() {}

func (x *ListGroupSubscribersResp_Subscriber) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupSubscribersResp_Subscriber.ProtoReflect.Descriptor instead.
func (*ListGroupSubscribersResp_Subscriber) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListGroupSubscribersResp_Subscriber) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListGroupSubscribersResp_Subscriber) GetSubscribeTime() uint32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

//Filter 过滤器
type ListMyJoinedGroupReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//JoinTimeGte 加入时间大于等于
	JoinTimeGte uint32 `protobuf:"varint,1,opt,name=joinTimeGte,proto3" json:"joinTimeGte,omitempty"`
}

func (x *ListMyJoinedGroupReq_Filter) Reset() {
	*x = ListMyJoinedGroupReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyJoinedGroupReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyJoinedGroupReq_Filter) ProtoMessage() {}

func (x *ListMyJoinedGroupReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyJoinedGroupReq_Filter.ProtoReflect.Descriptor instead.
func (*ListMyJoinedGroupReq_Filter) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ListMyJoinedGroupReq_Filter) GetJoinTimeGte() uint32 {
	if x != nil {
		return x.JoinTimeGte
	}
	return 0
}

//Option 选项
type ListMyJoinedGroupReq_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyJoinedGroupReq_Option) Reset() {
	*x = ListMyJoinedGroupReq_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyJoinedGroupReq_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyJoinedGroupReq_Option) ProtoMessage() {}

func (x *ListMyJoinedGroupReq_Option) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyJoinedGroupReq_Option.ProtoReflect.Descriptor instead.
func (*ListMyJoinedGroupReq_Option) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{14, 1}
}

//Cursor 游标
//List 列表
type ListMyJoinedGroupResp_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//GroupId 群组id
	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *ListMyJoinedGroupResp_Group) Reset() {
	*x = ListMyJoinedGroupResp_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyJoinedGroupResp_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyJoinedGroupResp_Group) ProtoMessage() {}

func (x *ListMyJoinedGroupResp_Group) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyJoinedGroupResp_Group.ProtoReflect.Descriptor instead.
func (*ListMyJoinedGroupResp_Group) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListMyJoinedGroupResp_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

//Filter 过滤器
type ListFriendApplyReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *FriendApplyStatus `protobuf:"varint,1,opt,name=status,proto3,enum=pb.FriendApplyStatus,oneof" json:"status,omitempty"`
}

func (x *ListFriendApplyReq_Filter) Reset() {
	*x = ListFriendApplyReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendApplyReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendApplyReq_Filter) ProtoMessage() {}

func (x *ListFriendApplyReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendApplyReq_Filter.ProtoReflect.Descriptor instead.
func (*ListFriendApplyReq_Filter) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{26, 0}
}

func (x *ListFriendApplyReq_Filter) GetStatus() FriendApplyStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return FriendApplyStatus_FriendApplying
}

//Option 选项
type ListFriendApplyReq_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeApplyByMe bool `protobuf:"varint,1,opt,name=includeApplyByMe,proto3" json:"includeApplyByMe,omitempty"` //包含我发出的申请
}

func (x *ListFriendApplyReq_Option) Reset() {
	*x = ListFriendApplyReq_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendApplyReq_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendApplyReq_Option) ProtoMessage() {}

func (x *ListFriendApplyReq_Option) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendApplyReq_Option.ProtoReflect.Descriptor instead.
func (*ListFriendApplyReq_Option) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{26, 1}
}

func (x *ListFriendApplyReq_Option) GetIncludeApplyByMe() bool {
	if x != nil {
		return x.IncludeApplyByMe
	}
	return false
}

//List 列表
type ListFriendApplyResp_FriendApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//ApplyId 申请id
	ApplyId string `protobuf:"bytes,1,opt,name=applyId,proto3" json:"applyId,omitempty"`
	//FromUserId 申请人id
	FromUserId string `protobuf:"bytes,2,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
	//ToUserId 被申请人id
	ToUserId string `protobuf:"bytes,3,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
	//Message 附加消息
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	//Answer 附加回答
	Answer string `protobuf:"bytes,5,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *ListFriendApplyResp_FriendApply) Reset() {
	*x = ListFriendApplyResp_FriendApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendApplyResp_FriendApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendApplyResp_FriendApply) ProtoMessage() {}

func (x *ListFriendApplyResp_FriendApply) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendApplyResp_FriendApply.ProtoReflect.Descriptor instead.
func (*ListFriendApplyResp_FriendApply) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{27, 0}
}

func (x *ListFriendApplyResp_FriendApply) GetApplyId() string {
	if x != nil {
		return x.ApplyId
	}
	return ""
}

func (x *ListFriendApplyResp_FriendApply) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *ListFriendApplyResp_FriendApply) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *ListFriendApplyResp_FriendApply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListFriendApplyResp_FriendApply) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

//Filter 过滤器
type ListChannelSubscribersReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//subscribeTimeGte 订阅时间大于等于
	SubscribeTimeGte uint32 `protobuf:"varint,1,opt,name=subscribeTimeGte,proto3" json:"subscribeTimeGte,omitempty"`
}

func (x *ListChannelSubscribersReq_Filter) Reset() {
	*x = ListChannelSubscribersReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannelSubscribersReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelSubscribersReq_Filter) ProtoMessage() {}

func (x *ListChannelSubscribersReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelSubscribersReq_Filter.ProtoReflect.Descriptor instead.
func (*ListChannelSubscribersReq_Filter) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{40, 0}
}

func (x *ListChannelSubscribersReq_Filter) GetSubscribeTimeGte() uint32 {
	if x != nil {
		return x.SubscribeTimeGte
	}
	return 0
}

//Option 选项
type ListChannelSubscribersReq_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListChannelSubscribersReq_Option) Reset() {
	*x = ListChannelSubscribersReq_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannelSubscribersReq_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelSubscribersReq_Option) ProtoMessage() {}

func (x *ListChannelSubscribersReq_Option) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelSubscribersReq_Option.ProtoReflect.Descriptor instead.
func (*ListChannelSubscribersReq_Option) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{40, 1}
}

//Cursor 游标
//List 列表
type ListChannelSubscribersResp_Subscriber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//UserId 用户id
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//SubscribeTime 订阅时间
	SubscribeTime uint32 `protobuf:"varint,2,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
}

func (x *ListChannelSubscribersResp_Subscriber) Reset() {
	*x = ListChannelSubscribersResp_Subscriber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannelSubscribersResp_Subscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelSubscribersResp_Subscriber) ProtoMessage() {}

func (x *ListChannelSubscribersResp_Subscriber) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelSubscribersResp_Subscriber.ProtoReflect.Descriptor instead.
func (*ListChannelSubscribersResp_Subscriber) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{41, 0}
}

func (x *ListChannelSubscribersResp_Subscriber) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListChannelSubscribersResp_Subscriber) GetSubscribeTime() uint32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

//Filter 过滤器
type ListMyChannelsReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//joinTimeGte 加入时间大于等于
	JoinTimeGte uint32 `protobuf:"varint,1,opt,name=joinTimeGte,proto3" json:"joinTimeGte,omitempty"`
}

func (x *ListMyChannelsReq_Filter) Reset() {
	*x = ListMyChannelsReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyChannelsReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyChannelsReq_Filter) ProtoMessage() {}

func (x *ListMyChannelsReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyChannelsReq_Filter.ProtoReflect.Descriptor instead.
func (*ListMyChannelsReq_Filter) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{42, 0}
}

func (x *ListMyChannelsReq_Filter) GetJoinTimeGte() uint32 {
	if x != nil {
		return x.JoinTimeGte
	}
	return 0
}

//Option 选项
type ListMyChannelsReq_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyChannelsReq_Option) Reset() {
	*x = ListMyChannelsReq_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyChannelsReq_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyChannelsReq_Option) ProtoMessage() {}

func (x *ListMyChannelsReq_Option) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyChannelsReq_Option.ProtoReflect.Descriptor instead.
func (*ListMyChannelsReq_Option) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{42, 1}
}

//List 列表
type ListMyChannelsResp_MyChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//ChannelId 频道id
	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	//JoinTime 加入时间
	JoinTime uint32 `protobuf:"varint,2,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
}

func (x *ListMyChannelsResp_MyChannel) Reset() {
	*x = ListMyChannelsResp_MyChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyChannelsResp_MyChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyChannelsResp_MyChannel) ProtoMessage() {}

func (x *ListMyChannelsResp_MyChannel) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyChannelsResp_MyChannel.ProtoReflect.Descriptor instead.
func (*ListMyChannelsResp_MyChannel) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{43, 0}
}

func (x *ListMyChannelsResp_MyChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ListMyChannelsResp_MyChannel) GetJoinTime() uint32 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

//Filter 过滤器
type ListJoinedConversationsReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//使用setting中的字段过滤
	SettingList []*ListJoinedConversationsReq_Filter_SettingKV `protobuf:"bytes,1,rep,name=settingList,proto3" json:"settingList,omitempty"`
}

func (x *ListJoinedConversationsReq_Filter) Reset() {
	*x = ListJoinedConversationsReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJoinedConversationsReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJoinedConversationsReq_Filter) ProtoMessage() {}

func (x *ListJoinedConversationsReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJoinedConversationsReq_Filter.ProtoReflect.Descriptor instead.
func (*ListJoinedConversationsReq_Filter) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{44, 0}
}

func (x *ListJoinedConversationsReq_Filter) GetSettingList() []*ListJoinedConversationsReq_Filter_SettingKV {
	if x != nil {
		return x.SettingList
	}
	return nil
}

//Option 选项
type ListJoinedConversationsReq_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//IncludeSelfMemberInfo 是否包含自己的成员信息
	IncludeSelfMemberInfo bool `protobuf:"varint,2,opt,name=includeSelfMemberInfo,proto3" json:"includeSelfMemberInfo,omitempty"`
}

func (x *ListJoinedConversationsReq_Option) Reset() {
	*x = ListJoinedConversationsReq_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJoinedConversationsReq_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJoinedConversationsReq_Option) ProtoMessage() {}

func (x *ListJoinedConversationsReq_Option) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJoinedConversationsReq_Option.ProtoReflect.Descriptor instead.
func (*ListJoinedConversationsReq_Option) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{44, 1}
}

func (x *ListJoinedConversationsReq_Option) GetIncludeSelfMemberInfo() bool {
	if x != nil {
		return x.IncludeSelfMemberInfo
	}
	return false
}

type ListJoinedConversationsReq_Filter_SettingKV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         ConversationSettingKey                               `protobuf:"varint,1,opt,name=key,proto3,enum=pb.ConversationSettingKey" json:"key,omitempty"`
	Value       string                                               `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operator    ListJoinedConversationsReq_Filter_SettingKV_Operator `protobuf:"varint,3,opt,name=operator,proto3,enum=pb.ListJoinedConversationsReq_Filter_SettingKV_Operator" json:"operator,omitempty"`
	OrNotExists bool                                                 `protobuf:"varint,4,opt,name=orNotExists,proto3" json:"orNotExists,omitempty"`
	OrExists    bool                                                 `protobuf:"varint,5,opt,name=orExists,proto3" json:"orExists,omitempty"`
}

func (x *ListJoinedConversationsReq_Filter_SettingKV) Reset() {
	*x = ListJoinedConversationsReq_Filter_SettingKV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJoinedConversationsReq_Filter_SettingKV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJoinedConversationsReq_Filter_SettingKV) ProtoMessage() {}

func (x *ListJoinedConversationsReq_Filter_SettingKV) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJoinedConversationsReq_Filter_SettingKV.ProtoReflect.Descriptor instead.
func (*ListJoinedConversationsReq_Filter_SettingKV) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{44, 0, 0}
}

func (x *ListJoinedConversationsReq_Filter_SettingKV) GetKey() ConversationSettingKey {
	if x != nil {
		return x.Key
	}
	return ConversationSettingKey_IsPinned
}

func (x *ListJoinedConversationsReq_Filter_SettingKV) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ListJoinedConversationsReq_Filter_SettingKV) GetOperator() ListJoinedConversationsReq_Filter_SettingKV_Operator {
	if x != nil {
		return x.Operator
	}
	return ListJoinedConversationsReq_Filter_SettingKV_Equal
}

func (x *ListJoinedConversationsReq_Filter_SettingKV) GetOrNotExists() bool {
	if x != nil {
		return x.OrNotExists
	}
	return false
}

func (x *ListJoinedConversationsReq_Filter_SettingKV) GetOrExists() bool {
	if x != nil {
		return x.OrExists
	}
	return false
}

//List 列表
type ListJoinedConversationsResp_Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//ConversationId 会话id
	ConversationId   string                                                   `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	ConversationType ConversationType                                         `protobuf:"varint,2,opt,name=conversationType,proto3,enum=pb.ConversationType" json:"conversationType,omitempty"`
	SelfMemberInfo   *ListJoinedConversationsResp_Conversation_SelfMemberInfo `protobuf:"bytes,31,opt,name=selfMemberInfo,proto3,oneof" json:"selfMemberInfo,omitempty"`
}

func (x *ListJoinedConversationsResp_Conversation) Reset() {
	*x = ListJoinedConversationsResp_Conversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJoinedConversationsResp_Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJoinedConversationsResp_Conversation) ProtoMessage() {}

func (x *ListJoinedConversationsResp_Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJoinedConversationsResp_Conversation.ProtoReflect.Descriptor instead.
func (*ListJoinedConversationsResp_Conversation) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{45, 0}
}

func (x *ListJoinedConversationsResp_Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ListJoinedConversationsResp_Conversation) GetConversationType() ConversationType {
	if x != nil {
		return x.ConversationType
	}
	return ConversationType_Single
}

func (x *ListJoinedConversationsResp_Conversation) GetSelfMemberInfo() *ListJoinedConversationsResp_Conversation_SelfMemberInfo {
	if x != nil {
		return x.SelfMemberInfo
	}
	return nil
}

type ListJoinedConversationsResp_Conversation_SelfMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinTime uint32 `protobuf:"varint,1,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
}

func (x *ListJoinedConversationsResp_Conversation_SelfMemberInfo) Reset() {
	*x = ListJoinedConversationsResp_Conversation_SelfMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_peer_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJoinedConversationsResp_Conversation_SelfMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJoinedConversationsResp_Conversation_SelfMemberInfo) ProtoMessage() {}

func (x *ListJoinedConversationsResp_Conversation_SelfMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_peer_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJoinedConversationsResp_Conversation_SelfMemberInfo.ProtoReflect.Descriptor instead.
func (*ListJoinedConversationsResp_Conversation_SelfMemberInfo) Descriptor() ([]byte, []int) {
	return file_conversation_peer_proto_rawDescGZIP(), []int{45, 0, 0}
}

func (x *ListJoinedConversationsResp_Conversation_SelfMemberInfo) GetJoinTime() uint32 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

var File_conversation_peer_proto protoreflect.FileDescriptor

var file_conversation_peer_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x10, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x43, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x13, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x42, 0x0a,
	0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x22, 0x59, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x15,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x22, 0x97, 0x03, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x12, 0x3c, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x70, 0x1a, 0x3a,
	0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x57, 0x0a, 0x0f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x13,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x58,
	0x0a, 0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc4, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x34, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x47, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x47, 0x74, 0x65, 0x1a, 0x08, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe3, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x4a, 0x0a, 0x0a, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x29,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2a, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x47,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x47, 0x74, 0x65, 0x1a, 0x08, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa5, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x21, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x17, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x46, 0x0a,
	0x18, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x14, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x5a, 0x0a,
	0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x16, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0xaa, 0x01, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x0f,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x14,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x27, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xda,
	0x02, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x35,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x34, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42,
	0x79, 0x4d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x4d, 0x65, 0x22, 0xc0, 0x02, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x95, 0x01, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x3b,
	0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x0f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x45, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x22, 0x42, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x16, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x94,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x45, 0x0a, 0x17, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0x45, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xce, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x06, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x34, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x47, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x47, 0x74, 0x65, 0x1a, 0x08, 0x0a,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x51, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x4a, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x8e, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2a, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x47, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6a, 0x6f, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x47, 0x74, 0x65, 0x1a, 0x08, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x46, 0x0a,
	0x0d, 0x6d, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0d, 0x6d, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x45, 0x0a, 0x09, 0x4d, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xde, 0x05, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xe6, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x51, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4b, 0x56, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x1a, 0x88, 0x02, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x56,
	0x12, 0x2c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x56, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72,
	0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x6f, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x23, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x01, 0x1a, 0x3e, 0x0a,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53,
	0x65, 0x6c, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc9, 0x03,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x1a, 0xa3, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x68,
	0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x1a, 0x2c, 0x0a, 0x0e, 0x53, 0x65, 0x6c, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x83, 0x01, 0x0a, 0x16, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x73, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x73, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x2a,
	0x4f, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x02,
	0x32, 0xdc, 0x04, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b,
	0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32,
	0x85, 0x04, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x53, 0x0a, 0x14, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xcb, 0x04, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x13, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x6e, 0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conversation_peer_proto_rawDescOnce sync.Once
	file_conversation_peer_proto_rawDescData = file_conversation_peer_proto_rawDesc
)

func file_conversation_peer_proto_rawDescGZIP() []byte {
	file_conversation_peer_proto_rawDescOnce.Do(func() {
		file_conversation_peer_proto_rawDescData = protoimpl.X.CompressGZIP(file_conversation_peer_proto_rawDescData)
	})
	return file_conversation_peer_proto_rawDescData
}

var file_conversation_peer_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_conversation_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_conversation_peer_proto_goTypes = []interface{}{
	(ConversationSettingKey)(0),                                     // 0: pb.ConversationSettingKey
	(FriendApplyStatus)(0),                                          // 1: pb.FriendApplyStatus
	(ListJoinedConversationsReq_Filter_SettingKV_Operator)(0),       // 2: pb.ListJoinedConversationsReq.Filter.SettingKV.Operator
	(*GroupAfterKeepAliveReq)(nil),                                  // 3: pb.GroupAfterKeepAliveReq
	(*GroupAfterKeepAliveResp)(nil),                                 // 4: pb.GroupAfterKeepAliveResp
	(*GroupAfterOnlineReq)(nil),                                     // 5: pb.GroupAfterOnlineReq
	(*GroupAfterOnlineResp)(nil),                                    // 6: pb.GroupAfterOnlineResp
	(*GroupAfterOfflineReq)(nil),                                    // 7: pb.GroupAfterOfflineReq
	(*GroupAfterOfflineResp)(nil),                                   // 8: pb.GroupAfterOfflineResp
	(*GroupCreateReq)(nil),                                          // 9: pb.GroupCreateReq
	(*GroupCreateResp)(nil),                                         // 10: pb.GroupCreateResp
	(*CountJoinGroupReq)(nil),                                       // 11: pb.CountJoinGroupReq
	(*CountJoinGroupResp)(nil),                                      // 12: pb.CountJoinGroupResp
	(*CountCreateGroupReq)(nil),                                     // 13: pb.CountCreateGroupReq
	(*CountCreateGroupResp)(nil),                                    // 14: pb.CountCreateGroupResp
	(*ListGroupSubscribersReq)(nil),                                 // 15: pb.ListGroupSubscribersReq
	(*ListGroupSubscribersResp)(nil),                                // 16: pb.ListGroupSubscribersResp
	(*ListMyJoinedGroupReq)(nil),                                    // 17: pb.ListMyJoinedGroupReq
	(*ListMyJoinedGroupResp)(nil),                                   // 18: pb.ListMyJoinedGroupResp
	(*FriendAfterKeepAliveReq)(nil),                                 // 19: pb.FriendAfterKeepAliveReq
	(*FriendAfterKeepAliveResp)(nil),                                // 20: pb.FriendAfterKeepAliveResp
	(*FriendAfterOnlineReq)(nil),                                    // 21: pb.FriendAfterOnlineReq
	(*FriendAfterOnlineResp)(nil),                                   // 22: pb.FriendAfterOnlineResp
	(*FriendAfterOfflineReq)(nil),                                   // 23: pb.FriendAfterOfflineReq
	(*FriendAfterOfflineResp)(nil),                                  // 24: pb.FriendAfterOfflineResp
	(*FriendApplyReq)(nil),                                          // 25: pb.FriendApplyReq
	(*FriendApplyResp)(nil),                                         // 26: pb.FriendApplyResp
	(*FriendApplyHandleReq)(nil),                                    // 27: pb.FriendApplyHandleReq
	(*FriendApplyHandleResp)(nil),                                   // 28: pb.FriendApplyHandleResp
	(*ListFriendApplyReq)(nil),                                      // 29: pb.ListFriendApplyReq
	(*ListFriendApplyResp)(nil),                                     // 30: pb.ListFriendApplyResp
	(*CountFriendReq)(nil),                                          // 31: pb.CountFriendReq
	(*CountFriendResp)(nil),                                         // 32: pb.CountFriendResp
	(*ChannelAfterKeepAliveReq)(nil),                                // 33: pb.ChannelAfterKeepAliveReq
	(*ChannelAfterKeepAliveResp)(nil),                               // 34: pb.ChannelAfterKeepAliveResp
	(*ChannelAfterOnlineReq)(nil),                                   // 35: pb.ChannelAfterOnlineReq
	(*ChannelAfterOnlineResp)(nil),                                  // 36: pb.ChannelAfterOnlineResp
	(*ChannelAfterOfflineReq)(nil),                                  // 37: pb.ChannelAfterOfflineReq
	(*ChannelAfterOfflineResp)(nil),                                 // 38: pb.ChannelAfterOfflineResp
	(*UpsertChannelMemberReq)(nil),                                  // 39: pb.UpsertChannelMemberReq
	(*UpsertChannelMemberResp)(nil),                                 // 40: pb.UpsertChannelMemberResp
	(*DeleteChannelMemberReq)(nil),                                  // 41: pb.DeleteChannelMemberReq
	(*DeleteChannelMemberResp)(nil),                                 // 42: pb.DeleteChannelMemberResp
	(*ListChannelSubscribersReq)(nil),                               // 43: pb.ListChannelSubscribersReq
	(*ListChannelSubscribersResp)(nil),                              // 44: pb.ListChannelSubscribersResp
	(*ListMyChannelsReq)(nil),                                       // 45: pb.ListMyChannelsReq
	(*ListMyChannelsResp)(nil),                                      // 46: pb.ListMyChannelsResp
	(*ListJoinedConversationsReq)(nil),                              // 47: pb.ListJoinedConversationsReq
	(*ListJoinedConversationsResp)(nil),                             // 48: pb.ListJoinedConversationsResp
	nil,                                                             // 49: pb.GroupCreateReq.InfoMapEntry
	nil,                                                             // 50: pb.GroupCreateReq.ExtraMapEntry
	(*ListGroupSubscribersReq_Filter)(nil),                          // 51: pb.ListGroupSubscribersReq.Filter
	(*ListGroupSubscribersReq_Option)(nil),                          // 52: pb.ListGroupSubscribersReq.Option
	(*ListGroupSubscribersResp_Subscriber)(nil),                     // 53: pb.ListGroupSubscribersResp.Subscriber
	(*ListMyJoinedGroupReq_Filter)(nil),                             // 54: pb.ListMyJoinedGroupReq.Filter
	(*ListMyJoinedGroupReq_Option)(nil),                             // 55: pb.ListMyJoinedGroupReq.Option
	(*ListMyJoinedGroupResp_Group)(nil),                             // 56: pb.ListMyJoinedGroupResp.Group
	(*ListFriendApplyReq_Filter)(nil),                               // 57: pb.ListFriendApplyReq.Filter
	(*ListFriendApplyReq_Option)(nil),                               // 58: pb.ListFriendApplyReq.Option
	(*ListFriendApplyResp_FriendApply)(nil),                         // 59: pb.ListFriendApplyResp.FriendApply
	(*ListChannelSubscribersReq_Filter)(nil),                        // 60: pb.ListChannelSubscribersReq.Filter
	(*ListChannelSubscribersReq_Option)(nil),                        // 61: pb.ListChannelSubscribersReq.Option
	(*ListChannelSubscribersResp_Subscriber)(nil),                   // 62: pb.ListChannelSubscribersResp.Subscriber
	(*ListMyChannelsReq_Filter)(nil),                                // 63: pb.ListMyChannelsReq.Filter
	(*ListMyChannelsReq_Option)(nil),                                // 64: pb.ListMyChannelsReq.Option
	(*ListMyChannelsResp_MyChannel)(nil),                            // 65: pb.ListMyChannelsResp.MyChannel
	(*ListJoinedConversationsReq_Filter)(nil),                       // 66: pb.ListJoinedConversationsReq.Filter
	(*ListJoinedConversationsReq_Option)(nil),                       // 67: pb.ListJoinedConversationsReq.Option
	(*ListJoinedConversationsReq_Filter_SettingKV)(nil),             // 68: pb.ListJoinedConversationsReq.Filter.SettingKV
	(*ListJoinedConversationsResp_Conversation)(nil),                // 69: pb.ListJoinedConversationsResp.Conversation
	(*ListJoinedConversationsResp_Conversation_SelfMemberInfo)(nil), // 70: pb.ListJoinedConversationsResp.Conversation.SelfMemberInfo
	(*RequestHeader)(nil),                                           // 71: pb.RequestHeader
	(*ResponseHeader)(nil),                                          // 72: pb.ResponseHeader
	(*UserChannel)(nil),                                             // 73: pb.UserChannel
	(ConversationType)(0),                                           // 74: pb.ConversationType
}
var file_conversation_peer_proto_depIdxs = []int32{
	71, // 0: pb.GroupAfterKeepAliveReq.header:type_name -> pb.RequestHeader
	72, // 1: pb.GroupAfterKeepAliveResp.header:type_name -> pb.ResponseHeader
	71, // 2: pb.GroupAfterOnlineReq.header:type_name -> pb.RequestHeader
	72, // 3: pb.GroupAfterOnlineResp.header:type_name -> pb.ResponseHeader
	71, // 4: pb.GroupAfterOfflineReq.header:type_name -> pb.RequestHeader
	72, // 5: pb.GroupAfterOfflineResp.header:type_name -> pb.ResponseHeader
	71, // 6: pb.GroupCreateReq.header:type_name -> pb.RequestHeader
	49, // 7: pb.GroupCreateReq.infoMap:type_name -> pb.GroupCreateReq.InfoMapEntry
	50, // 8: pb.GroupCreateReq.extraMap:type_name -> pb.GroupCreateReq.ExtraMapEntry
	72, // 9: pb.GroupCreateResp.header:type_name -> pb.ResponseHeader
	71, // 10: pb.CountJoinGroupReq.header:type_name -> pb.RequestHeader
	72, // 11: pb.CountJoinGroupResp.header:type_name -> pb.ResponseHeader
	71, // 12: pb.CountCreateGroupReq.header:type_name -> pb.RequestHeader
	72, // 13: pb.CountCreateGroupResp.header:type_name -> pb.ResponseHeader
	71, // 14: pb.ListGroupSubscribersReq.header:type_name -> pb.RequestHeader
	51, // 15: pb.ListGroupSubscribersReq.filter:type_name -> pb.ListGroupSubscribersReq.Filter
	52, // 16: pb.ListGroupSubscribersReq.option:type_name -> pb.ListGroupSubscribersReq.Option
	72, // 17: pb.ListGroupSubscribersResp.header:type_name -> pb.ResponseHeader
	53, // 18: pb.ListGroupSubscribersResp.subscriberList:type_name -> pb.ListGroupSubscribersResp.Subscriber
	71, // 19: pb.ListMyJoinedGroupReq.header:type_name -> pb.RequestHeader
	54, // 20: pb.ListMyJoinedGroupReq.filter:type_name -> pb.ListMyJoinedGroupReq.Filter
	55, // 21: pb.ListMyJoinedGroupReq.option:type_name -> pb.ListMyJoinedGroupReq.Option
	72, // 22: pb.ListMyJoinedGroupResp.header:type_name -> pb.ResponseHeader
	56, // 23: pb.ListMyJoinedGroupResp.groupList:type_name -> pb.ListMyJoinedGroupResp.Group
	71, // 24: pb.FriendAfterKeepAliveReq.header:type_name -> pb.RequestHeader
	72, // 25: pb.FriendAfterKeepAliveResp.header:type_name -> pb.ResponseHeader
	71, // 26: pb.FriendAfterOnlineReq.header:type_name -> pb.RequestHeader
	72, // 27: pb.FriendAfterOnlineResp.header:type_name -> pb.ResponseHeader
	71, // 28: pb.FriendAfterOfflineReq.header:type_name -> pb.RequestHeader
	72, // 29: pb.FriendAfterOfflineResp.header:type_name -> pb.ResponseHeader
	71, // 30: pb.FriendApplyReq.header:type_name -> pb.RequestHeader
	72, // 31: pb.FriendApplyResp.header:type_name -> pb.ResponseHeader
	71, // 32: pb.FriendApplyHandleReq.header:type_name -> pb.RequestHeader
	72, // 33: pb.FriendApplyHandleResp.header:type_name -> pb.ResponseHeader
	71, // 34: pb.ListFriendApplyReq.header:type_name -> pb.RequestHeader
	57, // 35: pb.ListFriendApplyReq.filter:type_name -> pb.ListFriendApplyReq.Filter
	58, // 36: pb.ListFriendApplyReq.option:type_name -> pb.ListFriendApplyReq.Option
	72, // 37: pb.ListFriendApplyResp.header:type_name -> pb.ResponseHeader
	59, // 38: pb.ListFriendApplyResp.friendApplyList:type_name -> pb.ListFriendApplyResp.FriendApply
	71, // 39: pb.CountFriendReq.header:type_name -> pb.RequestHeader
	72, // 40: pb.CountFriendResp.header:type_name -> pb.ResponseHeader
	71, // 41: pb.ChannelAfterKeepAliveReq.header:type_name -> pb.RequestHeader
	72, // 42: pb.ChannelAfterKeepAliveResp.header:type_name -> pb.ResponseHeader
	71, // 43: pb.ChannelAfterOnlineReq.header:type_name -> pb.RequestHeader
	72, // 44: pb.ChannelAfterOnlineResp.header:type_name -> pb.ResponseHeader
	71, // 45: pb.ChannelAfterOfflineReq.header:type_name -> pb.RequestHeader
	72, // 46: pb.ChannelAfterOfflineResp.header:type_name -> pb.ResponseHeader
	71, // 47: pb.UpsertChannelMemberReq.header:type_name -> pb.RequestHeader
	73, // 48: pb.UpsertChannelMemberReq.userChannel:type_name -> pb.UserChannel
	72, // 49: pb.UpsertChannelMemberResp.header:type_name -> pb.ResponseHeader
	71, // 50: pb.DeleteChannelMemberReq.header:type_name -> pb.RequestHeader
	72, // 51: pb.DeleteChannelMemberResp.header:type_name -> pb.ResponseHeader
	71, // 52: pb.ListChannelSubscribersReq.header:type_name -> pb.RequestHeader
	60, // 53: pb.ListChannelSubscribersReq.filter:type_name -> pb.ListChannelSubscribersReq.Filter
	61, // 54: pb.ListChannelSubscribersReq.option:type_name -> pb.ListChannelSubscribersReq.Option
	72, // 55: pb.ListChannelSubscribersResp.header:type_name -> pb.ResponseHeader
	62, // 56: pb.ListChannelSubscribersResp.subscriberList:type_name -> pb.ListChannelSubscribersResp.Subscriber
	71, // 57: pb.ListMyChannelsReq.header:type_name -> pb.RequestHeader
	63, // 58: pb.ListMyChannelsReq.filter:type_name -> pb.ListMyChannelsReq.Filter
	64, // 59: pb.ListMyChannelsReq.option:type_name -> pb.ListMyChannelsReq.Option
	72, // 60: pb.ListMyChannelsResp.header:type_name -> pb.ResponseHeader
	65, // 61: pb.ListMyChannelsResp.myChannelList:type_name -> pb.ListMyChannelsResp.MyChannel
	71, // 62: pb.ListJoinedConversationsReq.header:type_name -> pb.RequestHeader
	74, // 63: pb.ListJoinedConversationsReq.conversationType:type_name -> pb.ConversationType
	66, // 64: pb.ListJoinedConversationsReq.filter:type_name -> pb.ListJoinedConversationsReq.Filter
	67, // 65: pb.ListJoinedConversationsReq.option:type_name -> pb.ListJoinedConversationsReq.Option
	72, // 66: pb.ListJoinedConversationsResp.header:type_name -> pb.ResponseHeader
	69, // 67: pb.ListJoinedConversationsResp.conversationList:type_name -> pb.ListJoinedConversationsResp.Conversation
	1,  // 68: pb.ListFriendApplyReq.Filter.status:type_name -> pb.FriendApplyStatus
	68, // 69: pb.ListJoinedConversationsReq.Filter.settingList:type_name -> pb.ListJoinedConversationsReq.Filter.SettingKV
	0,  // 70: pb.ListJoinedConversationsReq.Filter.SettingKV.key:type_name -> pb.ConversationSettingKey
	2,  // 71: pb.ListJoinedConversationsReq.Filter.SettingKV.operator:type_name -> pb.ListJoinedConversationsReq.Filter.SettingKV.Operator
	74, // 72: pb.ListJoinedConversationsResp.Conversation.conversationType:type_name -> pb.ConversationType
	70, // 73: pb.ListJoinedConversationsResp.Conversation.selfMemberInfo:type_name -> pb.ListJoinedConversationsResp.Conversation.SelfMemberInfo
	3,  // 74: pb.groupService.GroupAfterKeepAlive:input_type -> pb.GroupAfterKeepAliveReq
	5,  // 75: pb.groupService.GroupAfterOnline:input_type -> pb.GroupAfterOnlineReq
	7,  // 76: pb.groupService.GroupAfterOffline:input_type -> pb.GroupAfterOfflineReq
	9,  // 77: pb.groupService.GroupCreate:input_type -> pb.GroupCreateReq
	11, // 78: pb.groupService.CountJoinGroup:input_type -> pb.CountJoinGroupReq
	13, // 79: pb.groupService.CountCreateGroup:input_type -> pb.CountCreateGroupReq
	15, // 80: pb.groupService.ListGroupSubscribers:input_type -> pb.ListGroupSubscribersReq
	17, // 81: pb.groupService.ListMyJoinedGroup:input_type -> pb.ListMyJoinedGroupReq
	19, // 82: pb.friendService.FriendAfterKeepAlive:input_type -> pb.FriendAfterKeepAliveReq
	21, // 83: pb.friendService.FriendAfterOnline:input_type -> pb.FriendAfterOnlineReq
	23, // 84: pb.friendService.FriendAfterOffline:input_type -> pb.FriendAfterOfflineReq
	25, // 85: pb.friendService.FriendApply:input_type -> pb.FriendApplyReq
	27, // 86: pb.friendService.FriendApplyHandle:input_type -> pb.FriendApplyHandleReq
	29, // 87: pb.friendService.ListFriendApply:input_type -> pb.ListFriendApplyReq
	31, // 88: pb.friendService.CountFriend:input_type -> pb.CountFriendReq
	33, // 89: pb.channelService.ChannelAfterKeepAlive:input_type -> pb.ChannelAfterKeepAliveReq
	35, // 90: pb.channelService.ChannelAfterOnline:input_type -> pb.ChannelAfterOnlineReq
	37, // 91: pb.channelService.ChannelAfterOffline:input_type -> pb.ChannelAfterOfflineReq
	39, // 92: pb.channelService.UpsertChannelMember:input_type -> pb.UpsertChannelMemberReq
	41, // 93: pb.channelService.DeleteChannelMember:input_type -> pb.DeleteChannelMemberReq
	43, // 94: pb.channelService.ListChannelSubscribers:input_type -> pb.ListChannelSubscribersReq
	45, // 95: pb.channelService.ListMyChannels:input_type -> pb.ListMyChannelsReq
	47, // 96: pb.sessionService.ListJoinedConversations:input_type -> pb.ListJoinedConversationsReq
	4,  // 97: pb.groupService.GroupAfterKeepAlive:output_type -> pb.GroupAfterKeepAliveResp
	6,  // 98: pb.groupService.GroupAfterOnline:output_type -> pb.GroupAfterOnlineResp
	8,  // 99: pb.groupService.GroupAfterOffline:output_type -> pb.GroupAfterOfflineResp
	10, // 100: pb.groupService.GroupCreate:output_type -> pb.GroupCreateResp
	12, // 101: pb.groupService.CountJoinGroup:output_type -> pb.CountJoinGroupResp
	14, // 102: pb.groupService.CountCreateGroup:output_type -> pb.CountCreateGroupResp
	16, // 103: pb.groupService.ListGroupSubscribers:output_type -> pb.ListGroupSubscribersResp
	18, // 104: pb.groupService.ListMyJoinedGroup:output_type -> pb.ListMyJoinedGroupResp
	20, // 105: pb.friendService.FriendAfterKeepAlive:output_type -> pb.FriendAfterKeepAliveResp
	22, // 106: pb.friendService.FriendAfterOnline:output_type -> pb.FriendAfterOnlineResp
	24, // 107: pb.friendService.FriendAfterOffline:output_type -> pb.FriendAfterOfflineResp
	26, // 108: pb.friendService.FriendApply:output_type -> pb.FriendApplyResp
	28, // 109: pb.friendService.FriendApplyHandle:output_type -> pb.FriendApplyHandleResp
	30, // 110: pb.friendService.ListFriendApply:output_type -> pb.ListFriendApplyResp
	32, // 111: pb.friendService.CountFriend:output_type -> pb.CountFriendResp
	34, // 112: pb.channelService.ChannelAfterKeepAlive:output_type -> pb.ChannelAfterKeepAliveResp
	36, // 113: pb.channelService.ChannelAfterOnline:output_type -> pb.ChannelAfterOnlineResp
	38, // 114: pb.channelService.ChannelAfterOffline:output_type -> pb.ChannelAfterOfflineResp
	40, // 115: pb.channelService.UpsertChannelMember:output_type -> pb.UpsertChannelMemberResp
	42, // 116: pb.channelService.DeleteChannelMember:output_type -> pb.DeleteChannelMemberResp
	44, // 117: pb.channelService.ListChannelSubscribers:output_type -> pb.ListChannelSubscribersResp
	46, // 118: pb.channelService.ListMyChannels:output_type -> pb.ListMyChannelsResp
	48, // 119: pb.sessionService.ListJoinedConversations:output_type -> pb.ListJoinedConversationsResp
	97, // [97:120] is the sub-list for method output_type
	74, // [74:97] is the sub-list for method input_type
	74, // [74:74] is the sub-list for extension type_name
	74, // [74:74] is the sub-list for extension extendee
	0,  // [0:74] is the sub-list for field type_name
}

func init() { file_conversation_peer_proto_init() }
func file_conversation_peer_proto_init() {
	if File_conversation_peer_proto != nil {
		return
	}
	file_types_peer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_conversation_peer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAfterKeepAliveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAfterKeepAliveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAfterOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAfterOnlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAfterOfflineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupAfterOfflineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountJoinGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountJoinGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountCreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountCreateGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupSubscribersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupSubscribersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyJoinedGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyJoinedGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAfterKeepAliveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAfterKeepAliveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAfterOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAfterOnlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAfterOfflineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAfterOfflineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplyHandleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplyHandleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelAfterKeepAliveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelAfterKeepAliveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelAfterOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelAfterOnlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelAfterOfflineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelAfterOfflineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertChannelMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertChannelMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannelSubscribersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannelSubscribersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyChannelsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyChannelsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJoinedConversationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJoinedConversationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupSubscribersReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupSubscribersReq_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupSubscribersResp_Subscriber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyJoinedGroupReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyJoinedGroupReq_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyJoinedGroupResp_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendApplyReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendApplyReq_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendApplyResp_FriendApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannelSubscribersReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannelSubscribersReq_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannelSubscribersResp_Subscriber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyChannelsReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyChannelsReq_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyChannelsResp_MyChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJoinedConversationsReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJoinedConversationsReq_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJoinedConversationsReq_Filter_SettingKV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJoinedConversationsResp_Conversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_peer_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJoinedConversationsResp_Conversation_SelfMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_conversation_peer_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_conversation_peer_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_conversation_peer_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_conversation_peer_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_conversation_peer_proto_msgTypes[66].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conversation_peer_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_conversation_peer_proto_goTypes,
		DependencyIndexes: file_conversation_peer_proto_depIdxs,
		EnumInfos:         file_conversation_peer_proto_enumTypes,
		MessageInfos:      file_conversation_peer_proto_msgTypes,
	}.Build()
	File_conversation_peer_proto = out.File
	file_conversation_peer_proto_rawDesc = nil
	file_conversation_peer_proto_goTypes = nil
	file_conversation_peer_proto_depIdxs = nil
}
